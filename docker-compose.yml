version: '3.8'

services:
  # Serviço do Zookeeper, uma dependência do Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro

  kafka-setup:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - kafka
    command: >
      sh -c "
        echo 'Esperando o Kafka ficar disponível...'
        # Loop que tenta listar tópicos até que o Kafka responda.
        until kafka-topics --list --bootstrap-server kafka:9092; do
          echo 'Ainda esperando pelo Kafka...'
          sleep 2
        done;
        echo 'Kafka pronto. Criando tópicos...'
        kafka-topics --create --if-not-exists --topic omp-mpi-topic --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1;
        kafka-topics --create --if-not-exists --topic spark-topic --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1;
        echo 'Tópicos criados ou já existentes.';
      "
  pyspark:
    build:
      context: ./spark-engine
      dockerfile: Dockerfile
    volumes:
      - ./spark-engine:/app
    working_dir: /app
    command: pyspark
    ports:
      - "4040:4040"
    stdin_open: true
    tty: true